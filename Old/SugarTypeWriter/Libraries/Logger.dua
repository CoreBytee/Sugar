{
  "Code":{
    "nl.cubic-inc.logger.LoggerClass":"local Logger = Emitter:extend()\n\nlocal date = os.date\nlocal format = string.format\nlocal stdout = _G.process.stdout.handle\n\n\nlocal RED     = 31\nlocal YELLOW  = 33\nlocal GREEN   = 32\nlocal CYAN    = 36\n\nlocal config = {\n\t{'[ERROR]  ', RED},\n\t{'[WARNING]', YELLOW},\n\t{'[INFO]   ', GREEN},\n\t{'[DEBUG]  ', CYAN},\n}\n\nfunction Logger:initialize(Settings)\n\tSettings = Settings or {}\n    Settings.Debug = Settings.Debug or false\n\tSettings.Out = Settings.Out or function (self, Text)\n\t\treturn stdout:write(Text .. \"\\n\")\n\tend\n\n    self.DebugMode = Settings.Debug\n\tself.Out = Settings.Out\nend\n\ndo -- parse config\n\tlocal bold = 1\n\tfor _, v in ipairs(config) do\n\t\tv[2] = format('\\27[%i;%im%s\\27[0m', bold, v[2], v[1])\n\tend\nend\n\n\nfunction Logger:Log(level, msg)\n\n\tlocal tag = config[level]\n\tif not tag then return end\n\n\tlocal d = date(\"%Y-%m-%d %H:%M:%S\")\n\tself:Out(format('[%s] %s: %s', d, tag[2], msg))\n\n\treturn msg\n\nend\n\nfunction Logger:Error(Msg)\n\tself:Log(1, Msg)\n\tself:emit(\"Error\", Msg)\nend\n\nfunction Logger:Warn(Msg)\n\tself:Log(2, Msg)\n\tself:emit(\"Warning\", Msg)\nend\n\nfunction Logger:Info(Msg)\n\tself:Log(3, Msg)\n\tself:emit(\"Information\", Msg)\nend\n\nfunction Logger:Debug(Msg)\n\tif self.DebugMode == true then\n\t\tself:Log(4, Msg)\n\t\tself:emit(\"Debug\", Msg)\n\tend\nend\n\nreturn Logger",
    "nl.cubic-inc.logger.Main":"local Logger = Import(\"nl.cubic-inc.logger.LoggerClass\")\n\nreturn Logger",
    "nl.cubic-inc.logger.Test":"local Package = {}\n\nfunction Package.OnInitialize()\n    local Logger = Import(\"nl.cubic-inc.logger.Main\"):new(\n        {\n            Debug = true,\n            Out = function (self, Text)\n                p(Text)\n                print(type(Text))\n                print(Text)\n            end\n        }\n    )\n\n\n    Logger:on(\"Information\", print)\n\n    Logger:Info(\"test\", \"test\")\n    Logger:Warn(\"test\")\n    Logger:Error(\"test\")\n    Logger:Debug(\"test\")\n\nend\n\nreturn Package"
  },
  "Resources":{
    "/package.info.lua":"cmV0dXJuIHsKCiAgICBJbmZvVmVyc2lvbiA9IDEsIC0tIERvbnQgdG91Y2ggdGhpcwoKICAgIElEID0gIkxvZ2dlciIsIC0tIEEgdW5pcXVlIGlkIAogICAgVmVyc2lvbiA9ICIwLjAuMSIsIC0tIFRoZSBwYWNrYWdlIHZlcnNpb24KCgogICAgTmFtZSA9ICJMb2dnZXIiLCAtLSBUaGUgbmFtZSBvZiB0aGUgcHJvamVjdCwgY2FuIHVzZSBzcGFjZXMKICAgIERlc2NyaXB0aW9uID0gIlRoZSBEdWEgTG9nZ2VyIiwgLS0gRGVzY3JpcHRpb24KCiAgICBBdXRob3IgPSB7CiAgICAgICAgRGV2ZWxvcGVycyA9IHsKICAgICAgICAgICAgIkNvcmVCeXRlIgogICAgICAgIH0sCiAgICAgICAgQ29udHJpYnV0b3JzID0gewogICAgICAgICAgICAiRG90dGVyIFRlYW0iCiAgICAgICAgfQogICAgfSwKCiAgICBEZXBlbmRlbmNpZXMgPSB7CiAgICAgICAgTHV2aXQgPSB7CiAgICAgICAgICAgIC0tIEx1dml0IGRlcGVuZGVuY2llcyAoInVzZXJuYW1lL3Byb2plY3RuYW1lIikKICAgICAgICB9LAogICAgICAgIER1YSA9IHsKICAgICAgICAgICAgLS0gRHVhIGRlcGVuZGVuY2llcyAoInByb2plY3RpZCIpCiAgICAgICAgfQogICAgfSwKCiAgICBDb250YWN0ID0gewogICAgICAgIFdlYnNpdGUgPSAiIiwgLS0gSG9tZXBhZ2UKICAgICAgICBTb3VyY2UgPSAiaHR0cHM6Ly9naXRodWIuY29tL0RvdC1sdWEvTG9nZ2VyIiwgLS0gR2l0aHViIHJlcHJvCiAgICAgICAgU29jaWFscyA9IHsKICAgICAgICAgICAgVHdpdHRlciA9ICIiLCAtLSBUd2l0dGVyIGxpbmsKICAgICAgICAgICAgRmFjZWJvb2sgPSAiIiwgLS0gRmFjZWJvb2sgbGluawogICAgICAgICAgICBEaXNjb3JkID0gIiIgLS0gRGlzY29yZCBzZXJ2ZXIgaW52aXRlCiAgICAgICAgfQogICAgfSwKCiAgICBJY29uID0gIiIsIC0tIEljb24gZm9yIHRoZSBwYWNrYWdlLCBub3QgdXNlZCBub3JtYWxseSBidXQgY2FuIGJlIHVzZWQgYnkgc29tZSBwcm9qZWN0cwogICAgRW52aXJvbm1lbnQgPSAiKiIsCiAgICBFbnRyeXBvaW50cyA9IHsKICAgICAgICBNYWluID0gIm5sLmN1YmljLWluYy5sb2dnZXIuVGVzdCIKICAgIH0KCn0K"
  },
  "PackageInfo":{
    "InfoVersion":1,
    "Version":"0.0.1",
    "Description":"The Dua Logger",
    "Icon":"",
    "Author":{
      "Contributors":["Dotter Team"],
      "Developers":["CoreByte"]
    },
    "Entrypoints":{
      "Main":"nl.cubic-inc.logger.Test"
    },
    "Name":"Logger",
    "Environment":"*",
    "Dependencies":{
      "Luvit":[],
      "Dua":[]
    },
    "ID":"Logger",
    "Contact":{
      "Website":"",
      "Source":"https://github.com/Dot-lua/Logger",
      "Socials":{
        "Twitter":"",
        "Facebook":"",
        "Discord":""
      }
    }
  }
}